// Written for the nand2tetris course provided by Coursera
// by Robert Wilson.
// File name: projects/03/DMux4Way16.hdl

/**
 * 4-way 16 bit demultiplexor:
 * {a[0..15], b[0..15], c[0..15], d[0..15]} = {in[0..15], 0, 0, 0} if sel == 00
 *							                  {0, in[0..15], 0, 0} if sel == 01
 *                							  {0, 0, in[0..15], 0} if sel == 10
 *                							  {0, 0, 0, in[0..15]} if sel == 11
 */

CHIP DMux4Way16 {
    IN in[16], sel[2];
    OUT a[16], b[16], c[16], d[16];
	
	PARTS:
	// Start with 16 bit demultiplexor
	DMux16(in=in, sel=sel[1], a=temp1, b=temp2);
	
	// Then DMux the 16 bits into two more sets
	DMux16(in=temp1, sel=sel[0], a=a, b=b);
	DMux16(in=temp2, sel=sel[0], a=c, b=d);
}