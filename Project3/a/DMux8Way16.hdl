// Written for the nand2tetris course provided by Coursera
// by Robert Wilson.
// File name: projects/03/DMux8Way16.hdl

/**
 * 8-way demultiplexor:
 * for i=[0..15]
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way16 {
    IN in[16], sel[3];
    OUT a[16], b[16], c[16], d[16], e[16], f[16], g[16], h[16];

    PARTS:
    // Put your code here:
	
	
	// More advanced way using previously built DMux4Way
	DMux16(in=in, sel=sel[2], a=a1, b=b2);
    DMux4Way16(in=a1, sel[0]=sel[0], sel[1]=sel[1], a=a, b=b, c=c, d=d);
    DMux4Way16(in=b2, sel[0]=sel[0], sel[1]=sel[1], a=e, b=f, c=g, d=h);
}